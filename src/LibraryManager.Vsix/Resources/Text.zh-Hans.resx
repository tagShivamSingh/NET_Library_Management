<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddClientSideLibrary" xml:space="preserve">
    <value>添加客户端库</value>
    <comment>Add Client-Side Library</comment>
  </data>
  <data name="CleanLibrariesStarted" xml:space="preserve">
    <value>已启动清理库...</value>
    <comment>When the "Clean" command is being executed</comment>
  </data>
  <data name="CleanLibrariesSucceeded" xml:space="preserve">
    <value>清理库成功</value>
    <comment>Status message</comment>
  </data>
  <data name="LibraryRestoredNoChange" xml:space="preserve">
    <value>还原已完成，文件已为最新</value>
    <comment>Status message</comment>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>正在加载...</value>
    <comment>Used in JSON editor for Intellisense</comment>
  </data>
  <data name="PackagesCouldNotBeLoaded" xml:space="preserve">
    <value>无法加载包</value>
    <comment>Used in installer dialog</comment>
  </data>
  <data name="CheckForUpdates" xml:space="preserve">
    <value>检查更新</value>
    <comment>Used in JSON editor light bulb</comment>
  </data>
  <data name="SuggestedAction_Update_NoUpdatesFound" xml:space="preserve">
    <value>此时找不到更新</value>
    <comment>Used in message box when light bulb found no updates</comment>
  </data>
  <data name="NugetInstallPrompt" xml:space="preserve">
    <value>将安装 NuGet 包以扩充 MSBuild 进程，但不会将任何文件添加到项目。

这可能需要 Internet 连接。

是否要继续?</value>
  </data>
  <data name="TypeToSearch" xml:space="preserve">
    <value>&lt;要搜索的类型&gt;</value>
  </data>
  <data name="SelectLibraryToSelectFilesToInstall" xml:space="preserve">
    <value>&lt;选择一个库以选择要安装文件&gt;</value>
  </data>
  <data name="DisableRestoreOnBuild" xml:space="preserve">
    <value>生成时禁用客户端库(&amp;E)</value>
  </data>
  <data name="EnableRestoreOnBuild" xml:space="preserve">
    <value>生成时启用还原客户端库(&amp;E)...</value>
  </data>
  <data name="Nuget_InstallingPackage" xml:space="preserve">
    <value>正在安装包含 MSBuild 目标的 NuGet 包...</value>
  </data>
  <data name="Nuget_PackageFailedToInstall" xml:space="preserve">
    <value>NuGet 包安装失败</value>
  </data>
  <data name="Nuget_PackageFailedToUninstall" xml:space="preserve">
    <value>NuGet 包卸载失败</value>
  </data>
  <data name="Nuget_PackageInstalled" xml:space="preserve">
    <value>已安装 NuGet 包</value>
  </data>
  <data name="Nuget_PackageUninstalled" xml:space="preserve">
    <value>已卸载 NuGet 包</value>
  </data>
  <data name="Nuget_UninstallingPackage" xml:space="preserve">
    <value>正在卸载 NuGet 包...</value>
  </data>
  <data name="UninstallLibrary" xml:space="preserve">
    <value>卸载 {0}</value>
    <comment>Used in JSON editor light bulb</comment>
  </data>
  <data name="FailToDeleteLibrariesFromProject" xml:space="preserve">
    <value>无法从项目中删除库</value>
  </data>
  <data name="LibraryDeletedFromProject" xml:space="preserve">
    <value>已成功从项目中删除 {0}</value>
    <comment>{0} is a file path</comment>
  </data>
  <data name="FailToAddLibrariesToProject" xml:space="preserve">
    <value>无法将库添加到项目中</value>
  </data>
  <data name="LibraryAddedToProject" xml:space="preserve">
    <value>已成功将 {0} 添加到项目中</value>
    <comment>{0} is a file path</comment>
  </data>
  <data name="OutputWindowTitle" xml:space="preserve">
    <value>库管理器</value>
  </data>
  <data name="OperationInProgress" xml:space="preserve">
    <value>已在进行库管理器操作。</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>文件:</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>库(_L):</value>
  </data>
  <data name="Provider" xml:space="preserve">
    <value>提供程序(_P):</value>
  </data>
  <data name="TargetLocation" xml:space="preserve">
    <value>目标位置(_T):</value>
  </data>
  <data name="ChooseSpecificFiles" xml:space="preserve">
    <value>选择特定文件(_S):</value>
  </data>
  <data name="IncludeAllLibraryFiles" xml:space="preserve">
    <value>包括所有库文件(_A):</value>
  </data>
  <data name="NoFilesSelected" xml:space="preserve">
    <value>未选择任何文件</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消(_C)</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>安装(_I)</value>
  </data>
  <data name="Checked" xml:space="preserve">
    <value>已选中 {0} {1}</value>
    <comment>{0} indicates PackageItemType, which could be a file or a folder. {1} is the name of the file or folder</comment>
  </data>
  <data name="UnChecked" xml:space="preserve">
    <value>未选中 {0} {1}</value>
    <comment>{0} indicates PackageItemType, which could be a file or a folder. {1} is the name of the file or folder</comment>
  </data>
  <data name="SuggestedAction_Update_Prerelease" xml:space="preserve">
    <value>预发布: {0}</value>
  </data>
  <data name="SuggestedAction_Update_Stable" xml:space="preserve">
    <value>稳定: {0}</value>
  </data>
  <data name="SuggestedAction_Update_Title" xml:space="preserve">
    <value>更新库</value>
    <comment>Title for SuggestedAction set</comment>
  </data>
  <data name="Indeterminate" xml:space="preserve">
    <value>不确定的 {0} {1}</value>
    <comment>{0} indicates PackageItemType, which could be a file or a folder. {1} is the name of the file or folder</comment>
  </data>
  <data name="File" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>文件夹</value>
  </data>
  <data name="CloseButtonText" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="NoMatchesFound" xml:space="preserve">
    <value>未找到匹配项</value>
  </data>
  <data name="BadLibraryId" xml:space="preserve">
    <value>库“{0}”与提供程序“{1}”的命名方案不匹配。{2}</value>
    <comment>Used in an error message popup.  {2} is the provider's example text (already localized elsewhere).</comment>
  </data>
</root>