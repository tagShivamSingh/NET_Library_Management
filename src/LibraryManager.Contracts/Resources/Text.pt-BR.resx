<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorCouldNotDeleteLibrary" xml:space="preserve">
    <value>Falha ao excluir um ou mais arquivos na biblioteca {0}</value>
  </data>
  <data name="ErrorCouldNotWriteFile" xml:space="preserve">
    <value>Não foi possível gravar {0} em disco. Verifique se o nome do arquivo está correto</value>
  </data>
  <data name="ErrorDestinationPathHasInvalidCharacter" xml:space="preserve">
    <value>O caminho do arquivo de destino "{0}" tem caracteres inválidos</value>
  </data>
  <data name="ErrorLibraryIdIsUndefined" xml:space="preserve">
    <value>A id da biblioteca é indefinida</value>
  </data>
  <data name="ErrorManifestMalformed" xml:space="preserve">
    <value>O manifesto do Gerenciador de Bibliotecas contém erros de sintaxe. Corrija os erros em libman.json e tente novamente.</value>
  </data>
  <data name="ErrorNotSupportedVersion" xml:space="preserve">
    <value>A versão "{0}" não é compatível com essa versão do Gerenciador de Bibliotecas</value>
  </data>
  <data name="ErrorPathIsUndefined" xml:space="preserve">
    <value>O "destino" é indefinido.</value>
  </data>
  <data name="ErrorPathOutsideWorkingDirectory" xml:space="preserve">
    <value>O "destino" deve estar dentro do diretório de trabalho</value>
  </data>
  <data name="ErrorProviderIsUndefined" xml:space="preserve">
    <value>O provedor é indefinido</value>
  </data>
  <data name="ErrorProviderUnknown" xml:space="preserve">
    <value>Não foi possível localizar o provedor "{0}"</value>
  </data>
  <data name="ErrorUnableToDownloadResource" xml:space="preserve">
    <value>Falha ao baixar o recurso de "{0}"</value>
  </data>
  <data name="ErrorUnableToResolveFilePath" xml:space="preserve">
    <value>O caminho do arquivo "{0}" não pôde ser resolvido pelo provedor "{1}"</value>
  </data>
  <data name="ErrorUnableToResolveSource" xml:space="preserve">
    <value>A biblioteca "{0}" não pôde ser resolvida pelo provedor "{1}"</value>
  </data>
  <data name="ErrorUnknownException" xml:space="preserve">
    <value>Ocorreu uma exceção desconhecida</value>
  </data>
  <data name="ErrorConflictingLibraries" xml:space="preserve">
    <value>Arquivo conflitante "{0}" encontrado em mais de uma biblioteca: {1}</value>
  </data>
  <data name="ErrorLibraryAlreadyInstalled" xml:space="preserve">
    <value>A biblioteca "{0}" já está instalada pelo provedor "{1}"</value>
  </data>
  <data name="ErrorLibraryCannotInstallDueToConflicts" xml:space="preserve">
    <value>O arquivo "{0}" já foi instalado por {1}.</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToConflicts" xml:space="preserve">
    <value>A biblioteca "{0}" não pôde ser atualizada para "{1}". Outra biblioteca "{1}" já está instalada</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToFileConflicts" xml:space="preserve">
    <value>A biblioteca "{0}" não pôde ser atualizada para "{1}". Os seguintes arquivos não são válidos para "{1}": {2}</value>
  </data>
  <data name="ErrorLibraryHasInvalidFiles" xml:space="preserve">
    <value>"{0}" não contém: {1}
Os arquivos válidos são {2}</value>
  </data>
  <data name="ErrorUnknownError" xml:space="preserve">
    <value>Ocorreu um erro desconhecido</value>
  </data>
  <data name="ErrorDuplicateLibraries" xml:space="preserve">
    <value>Não é possível restaurar. Várias definições para bibliotecas: {0}</value>
  </data>
  <data name="ErrorFilePathIsEmpty" xml:space="preserve">
    <value>A biblioteca "{0}" não pode especificar um arquivo com um nome vazio</value>
  </data>
</root>