<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorCouldNotDeleteLibrary" xml:space="preserve">
    <value>無法刪除程式庫 {0} 中的一或多個檔案</value>
  </data>
  <data name="ErrorCouldNotWriteFile" xml:space="preserve">
    <value>{0} 無法寫入磁碟。請確認檔案名稱正確</value>
  </data>
  <data name="ErrorDestinationPathHasInvalidCharacter" xml:space="preserve">
    <value>"{0}" 目的地檔案路徑包含無效字元</value>
  </data>
  <data name="ErrorLibraryIdIsUndefined" xml:space="preserve">
    <value>程式庫識別碼未定義</value>
  </data>
  <data name="ErrorManifestMalformed" xml:space="preserve">
    <value>程式庫管理員資訊清單包含語法錯誤。請修正 libman.json 中的錯誤，然後再試一次。</value>
  </data>
  <data name="ErrorNotSupportedVersion" xml:space="preserve">
    <value>此版本的程式庫管理員不支援版本 "{0}"</value>
  </data>
  <data name="ErrorPathIsUndefined" xml:space="preserve">
    <value>"destination" 未定義。</value>
  </data>
  <data name="ErrorPathOutsideWorkingDirectory" xml:space="preserve">
    <value>"destination" 必須在工作目錄內</value>
  </data>
  <data name="ErrorProviderIsUndefined" xml:space="preserve">
    <value>未定義提供者</value>
  </data>
  <data name="ErrorProviderUnknown" xml:space="preserve">
    <value>找不到 "{0}" 提供者</value>
  </data>
  <data name="ErrorUnableToDownloadResource" xml:space="preserve">
    <value>無法從 "{0}" 下載資源</value>
  </data>
  <data name="ErrorUnableToResolveFilePath" xml:space="preserve">
    <value>"{1}" 提供者無法解析 "{0}" 檔案路徑</value>
  </data>
  <data name="ErrorUnableToResolveSource" xml:space="preserve">
    <value>"{1}" 提供者無法解析 "{0}" 程式庫</value>
  </data>
  <data name="ErrorUnknownException" xml:space="preserve">
    <value>發生未知的例外狀況</value>
  </data>
  <data name="ErrorConflictingLibraries" xml:space="preserve">
    <value>在多個程式庫中找到衝突的檔案 "{0}": {1}</value>
  </data>
  <data name="ErrorLibraryAlreadyInstalled" xml:space="preserve">
    <value>"{1}" 提供者已經安裝 "{0}" 程式庫</value>
  </data>
  <data name="ErrorLibraryCannotInstallDueToConflicts" xml:space="preserve">
    <value>{1} 已經安裝了檔案 "{0}"。</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToConflicts" xml:space="preserve">
    <value>程式庫 "{0}" 無法更新為 "{1}"。已經安裝另一個程式庫 "{1}"</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToFileConflicts" xml:space="preserve">
    <value>程式庫 "{0}" 無法更新為 "{1}"。下列檔案對 "{1}" 無效: {2}</value>
  </data>
  <data name="ErrorLibraryHasInvalidFiles" xml:space="preserve">
    <value>"{0}" 未包含以下項目: {1}
有效的檔案為 {2}</value>
  </data>
  <data name="ErrorUnknownError" xml:space="preserve">
    <value>發生未知錯誤</value>
  </data>
  <data name="ErrorDuplicateLibraries" xml:space="preserve">
    <value>無法還原。程式庫有多個定義: {0}</value>
  </data>
  <data name="ErrorFilePathIsEmpty" xml:space="preserve">
    <value>程式庫 "{0}" 無法指定名稱空白的檔案</value>
  </data>
</root>