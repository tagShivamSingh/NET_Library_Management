<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorCouldNotDeleteLibrary" xml:space="preserve">
    <value>ライブラリ {0} の 1 つまたは複数のファイルを削除できませんでした</value>
  </data>
  <data name="ErrorCouldNotWriteFile" xml:space="preserve">
    <value>{0} をディスクに書き込めませんでした。ファイル名が正しいことを確認してください。</value>
  </data>
  <data name="ErrorDestinationPathHasInvalidCharacter" xml:space="preserve">
    <value>"{0}" の宛先ファイル パスには無効な文字が含まれています</value>
  </data>
  <data name="ErrorLibraryIdIsUndefined" xml:space="preserve">
    <value>ライブラリ ID は定義されていません</value>
  </data>
  <data name="ErrorManifestMalformed" xml:space="preserve">
    <value>ライブラリ マネージャーのマニフェストに構文エラーがあります。libman.json のエラーを修正してからもう一度お試しください。</value>
  </data>
  <data name="ErrorNotSupportedVersion" xml:space="preserve">
    <value>バージョン "{0}" は、このバージョンのライブラリ マネージャーによってサポートされていません</value>
  </data>
  <data name="ErrorPathIsUndefined" xml:space="preserve">
    <value>"宛先" が定義されていません。</value>
  </data>
  <data name="ErrorPathOutsideWorkingDirectory" xml:space="preserve">
    <value>”宛先” は作業ディレクトリ内にある必要があります。</value>
  </data>
  <data name="ErrorProviderIsUndefined" xml:space="preserve">
    <value>プロバイダーが定義されていません</value>
  </data>
  <data name="ErrorProviderUnknown" xml:space="preserve">
    <value>"{0}" プロバイダーが見つかりませんでした</value>
  </data>
  <data name="ErrorUnableToDownloadResource" xml:space="preserve">
    <value>リソースを "{0}" からダウンロードできませんでした</value>
  </data>
  <data name="ErrorUnableToResolveFilePath" xml:space="preserve">
    <value>"{0}" ファイル パスは "{1}" プロバイダーによって解決できませんでした</value>
  </data>
  <data name="ErrorUnableToResolveSource" xml:space="preserve">
    <value>"{1}" プロバイダーによって "{0}" ライブラリを解決することはできませんでした</value>
  </data>
  <data name="ErrorUnknownException" xml:space="preserve">
    <value>不明な例外が発生しました</value>
  </data>
  <data name="ErrorConflictingLibraries" xml:space="preserve">
    <value>競合するファイル "{0}" が複数のライブラリで見つかりました: {1}</value>
  </data>
  <data name="ErrorLibraryAlreadyInstalled" xml:space="preserve">
    <value>"{0}" ライブラリは "{1}" プロバイダーによって既にインストールされています</value>
  </data>
  <data name="ErrorLibraryCannotInstallDueToConflicts" xml:space="preserve">
    <value>ファイル "{0}" は既に {1} によってインストールされています。</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToConflicts" xml:space="preserve">
    <value>ライブラリ "{0}" を "{1}" に更新できませんでした。別のライブラリ "{1}" が既にインストールされています。</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToFileConflicts" xml:space="preserve">
    <value>ライブラリ "{0}" を "{1}" に更新できませんでした。次のファイルは "{1}" に対して無効です: {2}</value>
  </data>
  <data name="ErrorLibraryHasInvalidFiles" xml:space="preserve">
    <value>"{0}" には次が含まれていません: {1}
有効なファイルは {2} です</value>
  </data>
  <data name="ErrorUnknownError" xml:space="preserve">
    <value>不明なエラーが発生しました</value>
  </data>
  <data name="ErrorDuplicateLibraries" xml:space="preserve">
    <value>復元できません。次のライブラリの定義が複数あります: {0}</value>
  </data>
  <data name="ErrorFilePathIsEmpty" xml:space="preserve">
    <value>ライブラリ "{0}" では空の名前のファイルを指定できません</value>
  </data>
</root>