<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorCouldNotDeleteLibrary" xml:space="preserve">
    <value>{0} 라이브러리에서 하나 이상의 파일을 삭제하지 못했습니다.</value>
  </data>
  <data name="ErrorCouldNotWriteFile" xml:space="preserve">
    <value>{0}을(를) 디스크에 기록할 수 없습니다. 파일 이름이 올바른지 확인하세요.</value>
  </data>
  <data name="ErrorDestinationPathHasInvalidCharacter" xml:space="preserve">
    <value>"{0}" 대상 파일 경로에 잘못된 문자가 있습니다.</value>
  </data>
  <data name="ErrorLibraryIdIsUndefined" xml:space="preserve">
    <value>라이브러리 ID가 정의되어 있지 않습니다.</value>
  </data>
  <data name="ErrorManifestMalformed" xml:space="preserve">
    <value>라이브러리 관리자 매니페스트에 구문 오류가 있습니다. libman.json에서 해당 오류를 수정한 후 다시 시도하세요.</value>
  </data>
  <data name="ErrorNotSupportedVersion" xml:space="preserve">
    <value>"{0}" 버전은 이 버전의 라이브러리 관리자에서 지원되지 않습니다.</value>
  </data>
  <data name="ErrorPathIsUndefined" xml:space="preserve">
    <value>"대상"이 정의되어 있지 않습니다.</value>
  </data>
  <data name="ErrorPathOutsideWorkingDirectory" xml:space="preserve">
    <value>"대상"은 작업 디렉터리 내부에 있어야 합니다.</value>
  </data>
  <data name="ErrorProviderIsUndefined" xml:space="preserve">
    <value>공급자가 정의되어 있지 않습니다.</value>
  </data>
  <data name="ErrorProviderUnknown" xml:space="preserve">
    <value>"{0}" 공급자를 찾을 수 없습니다.</value>
  </data>
  <data name="ErrorUnableToDownloadResource" xml:space="preserve">
    <value>"{0}"에서 리소스를 다운로드하지 못했습니다.</value>
  </data>
  <data name="ErrorUnableToResolveFilePath" xml:space="preserve">
    <value>"{1}" 공급자에서 "{0}" 파일 경로를 확인할 수 없습니다.</value>
  </data>
  <data name="ErrorUnableToResolveSource" xml:space="preserve">
    <value>"{0}" 라이브러리를 "{1}" 공급자에서 확인할 수 없습니다.</value>
  </data>
  <data name="ErrorUnknownException" xml:space="preserve">
    <value>알 수 없는 예외가 발생했습니다.</value>
  </data>
  <data name="ErrorConflictingLibraries" xml:space="preserve">
    <value>하나 이상의 라이브러리에서 "{0}" 파일이 충돌합니다. {1}</value>
  </data>
  <data name="ErrorLibraryAlreadyInstalled" xml:space="preserve">
    <value>"{1}" 공급자가 "{0}" 라이브러리를 이미 설치했습니다.</value>
  </data>
  <data name="ErrorLibraryCannotInstallDueToConflicts" xml:space="preserve">
    <value>{1}이(가) "{0}" 파일을 이미 설치했습니다.</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToConflicts" xml:space="preserve">
    <value>"{0}" 라이브러리를 "{1}"에 업데이트할 수 없습니다. 다른 라이브러리 "{1}"이(가) 이미 설치되어 있습니다.</value>
  </data>
  <data name="ErrorLibraryCannotUpdateDueToFileConflicts" xml:space="preserve">
    <value>"{0}" 라이브러리를 "{1}"에 업데이트할 수 없습니다. "{1}"에 대해 다음 파일이 유효하지 않습니다. {2}</value>
  </data>
  <data name="ErrorLibraryHasInvalidFiles" xml:space="preserve">
    <value>"{0}"에 {1}이(가) 포함되어 있지 않습니다.
유효한 파일은 {2}입니다.</value>
  </data>
  <data name="ErrorUnknownError" xml:space="preserve">
    <value>알 수 없는 오류 발생</value>
  </data>
  <data name="ErrorDuplicateLibraries" xml:space="preserve">
    <value>복원할 수 없음. 라이브러리에 대한 여러 개의 정의: {0}</value>
  </data>
  <data name="ErrorFilePathIsEmpty" xml:space="preserve">
    <value>"{0}" 라이브러리는 이름이 비어 있는 파일을 지정할 수 없습니다.</value>
  </data>
</root>