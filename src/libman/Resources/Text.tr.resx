<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CacheCommandDesc" xml:space="preserve">
    <value>Libman önbellek içeriklerini listeleyin veya temizleyin</value>
  </data>
  <data name="CleanCommandDesc" xml:space="preserve">
    <value>Projedeki libman.json projesi içinde tanımlanan tüm kütüphane dosyaları siler</value>
  </data>
  <data name="CleanCommandRemarks" xml:space="preserve">
    <value>Bu işlemden sonra boş olan klasörleri siler.</value>
  </data>
  <data name="ConfigCommand_Description" xml:space="preserve">
    <value>Yapılandırma ayarlarını alır veya ayarlar</value>
  </data>
  <data name="ConfigCommand_Examples" xml:space="preserve">
    <value>    libman config http_proxy
    libman config --set http_proxy=http://example
    libman config --setEncrypted http_proxy.password=passwordText</value>
  </data>
  <data name="ConfigCommand_ArgumentDescription" xml:space="preserve">
    <value>Alınacak ayarın adı</value>
  </data>
  <data name="ConfigCommand_Error_KeyNotFound" xml:space="preserve">
    <value>{0} anahtarı bulunamadı.</value>
  </data>
  <data name="DefaultDestinationOptionDesc" xml:space="preserve">
    <value>Geçerli dizine göre, belirli bir kitaplık için hedef tanımlanmadığında kitaplık dosyalarının yükleneceği yol</value>
  </data>
  <data name="DefaultProviderOptionDesc" xml:space="preserve">
    <value>Belirli bir kitaplık için herhangi bir sağlayıcı belirlenmediğinde kullanılacak sağlayıcı. (örneğin. “cdnjs”, “filesystem”)</value>
  </data>
  <data name="NonInteractiveConsoleMessage" xml:space="preserve">
    <value>Bu konsolda kullanıcı girdisi istenemez.</value>
  </data>
  <data name="DestinationOptionDesc" xml:space="preserve">
    <value>Kitaplığın yükleneceği konum (belirtilmezse, varsayılan hedef konumu kullanılır)</value>
  </data>
  <data name="ExamplesHeader" xml:space="preserve">
    <value>Örnekler:</value>
  </data>
  <data name="FilesOptionDesc" xml:space="preserve">
    <value>Belirtilen kitaplıktaki yüklenecek dosyalar (belirtilmemişse kitaplıktaki tüm dosyalar yüklenir)</value>
  </data>
  <data name="InitCommandDesc" xml:space="preserve">
    <value>Yeni bir libman.json oluşturun</value>
  </data>
  <data name="InstallCommandDesc" xml:space="preserve">
    <value>LibMan.json dosyasına bir kitaplık tanımı ekleyin ve kitaplığı belirtilen konuma indirin</value>
  </data>
  <data name="InstallCommandExamples" xml:space="preserve">
    <value>libman yükleme jquery@3.2.1
    libman yükleme jquery --provider cdnjs --destination wwwroot\scripts\jquery --files jquery.min.js
    libman yükleme myCalendar --provider filesystem --files calendar.js --files calendar.css</value>
  </data>
  <data name="InstallCommandLibraryIdArgumentDesc" xml:space="preserve">
    <value>Yüklenecek kitaplık</value>
  </data>
  <data name="InstallCommandProviderSpecificLogic" xml:space="preserve">
    <value>    CDNJS kitaplıklarının kitaplık kimliği biçimi: “&lt;kitaplıkAdı&gt;@&lt;kitaplıkSürümü&gt;”
    CDNJS kitaplıkları için kitaplık kimliğinde sürüm belirtilmediyse, mevcut en yüksek sürüm kullanılır.</value>
  </data>
  <data name="InstallCommandRemarks" xml:space="preserve">
    <value>    Bir libman.json yoksa bir tane başlatır
    Varsayılan sağlayıcı yoksa sağlayıcı seçeneği gereklidir
    Varsayılan hedef yoksa hedef seçeneği gereklidir
    Belirtilen dosya yoksa kitaplığın tamamı dahil edilir</value>
  </data>
  <data name="InvalidArgumentsMessage" xml:space="preserve">
    <value>Komut için geçersiz bağımsız değişkenler: {0}</value>
  </data>
  <data name="LibmanCommandDesc" xml:space="preserve">
    <value>Kitaplık Yöneticisi</value>
  </data>
  <data name="ProviderOptionDesc" xml:space="preserve">
    <value>Kullanılacak sağlayıcı (belirtilmezse varsayılan sağlayıcı kullanılır)</value>
  </data>
  <data name="ProviderSpecificLogicHeader" xml:space="preserve">
    <value>Sağlayıcıya özel mantık:</value>
  </data>
  <data name="RemarksHeader" xml:space="preserve">
    <value>Açıklamalar:</value>
  </data>
  <data name="RestoreCommandDesc" xml:space="preserve">
    <value>Sağlayıcıdan tüm dosyaları indirir ve belirtilen hedefe kaydeder</value>
  </data>
  <data name="RestoreCommandRemarks" xml:space="preserve">
    <value>Geçerli klasörde libman.json olmadığında gösterilen hata
    Kitaplık bir sağlayıcı belirtiyorsa, bu varsayılan defaultProvider değerini geçersiz kılar
    Kitaplık bir hedef belirtiyorsa, bu defaultDestination değerini geçersiz kılar</value>
  </data>
  <data name="UnInstallCommandDesc" xml:space="preserve">
    <value>Belirtilen kitaplığa ilişkin tüm dosyaları belirtilen konumdan siler, ardından belirtilen kitaplık tanımını libman.json dosyasından kaldırır</value>
  </data>
  <data name="UnInstallCommandExamples" xml:space="preserve">
    <value>    libman uninstall jquery
    libman uninstall jquery@3.3.1</value>
  </data>
  <data name="UninstallCommandLibraryIdArgumentDesc" xml:space="preserve">
    <value>Kaldırılacak kitaplık</value>
  </data>
  <data name="UninstallCommandProviderOptionDesc" xml:space="preserve">
    <value>Kaldırılacak kitaplığın sağlayıcısı</value>
  </data>
  <data name="UnInstallCommandProviderSpecificLogic" xml:space="preserve">
    <value>    CDNJS kitaplıklarının kitaplık kimliği biçimi: “&lt;kitaplıkAdı&gt;@&lt;kitaplıkSürümü&gt;”
    Kitaplık kimliğinde sürüm belirtilmediyse, bu komut kitaplıkAdı değeri ilgili kitaplıkKimliği ile eşleşen tüm kitaplıkları etkiler</value>
  </data>
  <data name="UnInstallCommandRemarks" xml:space="preserve">
    <value>Geçerli klasörde libman.json olmadığında gösterilecek hata
    Belirtilen kitaplık mevcut olmadığında gösterilecek hata
    Aynı libraryId ile birden fazla kitaplık varsa seçim yapmanız istenir.</value>
  </data>
  <data name="VerbosityOptionDesc" xml:space="preserve">
    <value>Çıktının ayrıntı düzeyini belirleyin (örneğin, "normal", "ayrıntılı", "sessiz")</value>
  </data>
  <data name="ProjectPathOptionDesc" xml:space="preserve">
    <value>Proje yolu (geçerli dizin varsayılan kullanılır)</value>
  </data>
  <data name="DirectoryNotFoundMessage" xml:space="preserve">
    <value>Dizin bulunamadı {0}</value>
  </data>
  <data name="FailedToRestoreLibraryMessage" xml:space="preserve">
    <value>"{0}" geri yüklenemedi</value>
  </data>
  <data name="FileDeleted" xml:space="preserve">
    <value>{0} silindi</value>
  </data>
  <data name="FileDeleteFail" xml:space="preserve">
    <value>{0} silinemedi</value>
  </data>
  <data name="FileWrittenToDisk" xml:space="preserve">
    <value>{0} diske yazıldı</value>
  </data>
  <data name="InitFailedLibmanJsonFileExists" xml:space="preserve">
    <value>Başlatılamadı: Zaten bir 'libman.json' var</value>
  </data>
  <data name="CleanFailed" xml:space="preserve">
    <value>Bazı dosyalar temizlenemedi.</value>
  </data>
  <data name="LibmanJsonNotFound" xml:space="preserve">
    <value>Libman.JSON bulunamadı: {0}</value>
  </data>
  <data name="DestinationRequiredWhenNoDefaultIsPresent" xml:space="preserve">
    <value>Varsayılan hedef ayaranmadı. Lütfen '--destination' kullanarak bir hedef sağlayın</value>
  </data>
  <data name="LibraryIdRequiredForInstall" xml:space="preserve">
    <value>Yüklemek için LibraryId gereklidir</value>
  </data>
  <data name="LibraryIdRequiredForUnInstall" xml:space="preserve">
    <value>Kaldırmak için LibraryId gereklidir</value>
  </data>
  <data name="MoreThanOneLibraryFoundToUninstall" xml:space="preserve">
    <value>"{0}" kimliğine sahip birden fazla kitaplık bulundu</value>
  </data>
  <data name="ProviderRequiredWhenNoDefaultIsPresent" xml:space="preserve">
    <value>Varsayılan sağlayıcı ayarlanmamış. Lütfen '--provider' kullanarak bir sağlayıcı belirtin</value>
  </data>
  <data name="UseProviderToDisambiguateMessage" xml:space="preserve">
    <value>Projedeki farklı sağlayıcılara ait olup aynı adı taşıyan kitaplıkları netleştirmek için --provider kullanın</value>
  </data>
  <data name="MoreThanOneLibraryFoundToUninstallForProvider" xml:space="preserve">
    <value>"{1}" sağlayıcısı için "{0}" kimliğine sahip birden fazla kitaplık bulundu. Lütfen bunları libman.json dosyasından el ile kaldırın</value>
  </data>
  <data name="NoLibraryToUninstall" xml:space="preserve">
    <value>"{0}" kitaplığı yüklü değil. Kaldırılacak bir şey yok</value>
  </data>
  <data name="CacheCleanCommandDesc" xml:space="preserve">
    <value>Yerel makinenin LibMan önbelleğindeki tüm dosyaları silin.</value>
  </data>
  <data name="CacheListCommandDesc" xml:space="preserve">
    <value>Yerel makinenin LibMan önbelleğinde depolanan tüm kitaplıkları listesini görüntüler.</value>
  </data>
  <data name="CacheCleanProviderArgumentDesc" xml:space="preserve">
    <value>Önbellek dosyalarının temizlenmesi gereken sağlayıcı.</value>
  </data>
  <data name="UpdateCommandDesc" xml:space="preserve">
    <value>Belirtilen kitaplığı güncelleştirir</value>
  </data>
  <data name="UpdateCommandExamples" xml:space="preserve">
    <value>    libman update jquery
    libman update jquery --to 3.3.1
    libman update jquery -pre
</value>
  </data>
  <data name="UpdateCommandRemarks" xml:space="preserve">
    <value>Geçerli klasörde libman.json olmadığında gösterilecek hata
    Belirtilen kitaplık mevcut olmadığında gösterilecek hata
    Aynı libraryId ile birden fazla kitaplık varsa seçim yapmanız istenir.</value>
  </data>
  <data name="UpdateCommandLibraryArgumentDesc" xml:space="preserve">
    <value>Güncelleştirilecek kitaplığın adı (sürüm bilgisi olmadan).</value>
  </data>
  <data name="UpdateCommandPreReleaseOptionDesc" xml:space="preserve">
    <value>Belirtilmişse kitaplığın en son yayım öncesi sürümü indirilir (uygun olduğunda)</value>
  </data>
  <data name="UpdateCommandProviderOptionDesc" xml:space="preserve">
    <value>Belirtilmişse, yalnızca belirtilen sağlayıcının kitaplıkları güncelleştirilir</value>
  </data>
  <data name="CacheCleanedMessage" xml:space="preserve">
    <value>Önbellek temizlendi.</value>
  </data>
  <data name="CacheCleanFailed" xml:space="preserve">
    <value>Önbellek temizlenemedi: {0}</value>
  </data>
  <data name="CacheContentMessage" xml:space="preserve">
    <value>Önbellek içeriği:</value>
  </data>
  <data name="CacheEmptyMessage" xml:space="preserve">
    <value>(boş)</value>
  </data>
  <data name="CacheForProviderCleanedMessage" xml:space="preserve">
    <value>{0} önbelleği temizlendi.</value>
  </data>
  <data name="CacheListFilesOptionDesc" xml:space="preserve">
    <value>Her kitaplık için önbelleğe alınan dosyaları listeleyin</value>
  </data>
  <data name="MoreThanOneLibraryFoundToUpdate" xml:space="preserve">
    <value>"{0}" adında birden fazla kitaplık bulundu</value>
  </data>
  <data name="NoLibrariesToUpdate" xml:space="preserve">
    <value>Güncelleştirilecek kitaplık yok. Kitaplık yüklemek için lütfen yükleme komutlarını kullanın</value>
  </data>
  <data name="NoLibraryFoundToUpdate" xml:space="preserve">
    <value>Güncelleştirilmek üzere "{0}" adında bir kitaplık bulunamadı.
Lütfen güncelleştirilmesi için sürüm bilgilerini içermeyen bir kitaplık adı belirtin.</value>
  </data>
  <data name="InstallLibraryFailed" xml:space="preserve">
    <value>"{0}" kitaplığı yüklenemedi</value>
  </data>
  <data name="CacheListLibrariesOptionDesc" xml:space="preserve">
    <value>Her sağlayıcı için önbelleğe alınan kütüphaneleri listeler.</value>
  </data>
  <data name="ProviderNotInstalled" xml:space="preserve">
    <value>"{0}" sağlayıcısı yüklü değil</value>
  </data>
  <data name="SuggestedIdsMessage" xml:space="preserve">
    <value>Benzer kitaplıklar:</value>
  </data>
  <data name="FixManifestFile" xml:space="preserve">
    <value>Lütfen libman.json dosyasını düzeltin ve yeniden deneyin</value>
  </data>
  <data name="ChooseAnOption" xml:space="preserve">
    <value>Seçenek belirleyin:</value>
  </data>
  <data name="LatestVersionAlreadyInstalled" xml:space="preserve">
    <value>"{0}" kitaplığı güncel durumda</value>
  </data>
  <data name="InvalidToVersion" xml:space="preserve">
    <value>"{0}", --to-version için geçerli bir değer değil</value>
  </data>
  <data name="UpdateCommandToVersionOptionDesc" xml:space="preserve">
    <value>Kitaplığın güncelleştirileceği sürüm (sağlayıcının tam libraryid bilgisi gerekir)</value>
  </data>
  <data name="InstalledLibrary" xml:space="preserve">
    <value>"{0}" kitaplığı "{1}" üzerinde yüklendi</value>
  </data>
  <data name="UninstalledLibrary" xml:space="preserve">
    <value>"{0}" kitaplığı kaldırıldı</value>
  </data>
  <data name="InvalidFilesForLibrary" xml:space="preserve">
    <value>"{0}" kitaplığı şu dosyaları içermiyor: {1}</value>
  </data>
  <data name="LibraryCannotBeInstalledDueToConflictingLibraries" xml:space="preserve">
    <value>"{0}" kitaplığı yüklenemiyor. "{1}", "{2}" üzerinde zaten yüklü durumda.
Lütfen farklı bir hedef belirtin.</value>
  </data>
  <data name="LibraryIdRequiredForUpdate" xml:space="preserve">
    <value>Güncelleştirme için LibraryId gereklidir</value>
  </data>
  <data name="SpecifyDifferentDestination" xml:space="preserve">
    <value>Lütfen farklı bir hedef belirtin.</value>
  </data>
  <data name="UninstallFailed" xml:space="preserve">
    <value>"{0}" kaldırılamadı</value>
  </data>
  <data name="UpdateLibraryFailed" xml:space="preserve">
    <value>"{0}", "{1}" sürümüne güncelleştirilemedi</value>
  </data>
  <data name="UpdateLibraryToLatestFailed" xml:space="preserve">
    <value>"{0}" en son sürüme güncelleştirilemedi</value>
  </data>
  <data name="LibraryUpdated" xml:space="preserve">
    <value>"{0}", "{1}" olarak güncelleştirildi</value>
  </data>
  <data name="UnableToFindLatestVersionForLibrary" xml:space="preserve">
    <value>"{0}" için en son sürüm belirlenemedi</value>
  </data>
  <data name="InitFailedUnknownProvider" xml:space="preserve">
    <value>Libman.JSON başlatılamadı. [{0}]: {1}</value>
  </data>
  <data name="SpecifyDisabmiguatedLibrary" xml:space="preserve">
    <value>Lütfen kitaplık kimliğini eksiksiz olarak belirtin ve '--provider' seçeneğini kullanarak sağlayıcı bilgilerini verin.</value>
  </data>
  <data name="SpecifyFieldUsingOption" xml:space="preserve">
    <value>Lütfen '--{1}' seçeneğini kullanarak '{0}' öğesini belirtin.</value>
  </data>
  <data name="ConfigCommand_Error_ConflictingParameters" xml:space="preserve">
    <value>Ayarlar aynı işlemde okunup yazılamaz</value>
  </data>
  <data name="ConfigCommand_OptionDescription_Set" xml:space="preserve">
    <value>Yapılandırma deposunda bir anahtar-değer çifti ayarlar. Bu seçenek, key=value biçiminde olmalıdır</value>
  </data>
  <data name="ConfigCommand_OptionDescription_SetEncrypted" xml:space="preserve">
    <value>Yapılandırma deposunda şifrelenmiş bir değeri olan bir anahtar ayarlar. Bu seçenek, key=plaintext biçiminde olmalıdır.</value>
  </data>
  <data name="ConfigCommand_Remarks" xml:space="preserve">
    <value>    Ayarlar, aynı işlemde okunamaz ve depolanamaz.
    Bir ayarı kaldırmak için, boş bir dizeye ayarlayın (--set key=).
    Şifrelenmiş ayarlar için şifresi çözülmüş değerlerin alınması desteklenmiyor.</value>
  </data>
  <data name="CacheLocationMessage" xml:space="preserve">
    <value>Önbellek kök dizini:</value>
  </data>
  <data name="UseDefault" xml:space="preserve">
    <value>libman.json dosyası için varsayılan ayarları kullan</value>
  </data>
</root>